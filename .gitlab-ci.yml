stages:
  - build
  - deploy

BuildDev:
  stage: build
  tags:
    - "ff_linux"
  image: node:16.15.0
  only:
    - development
  script:
    - echo "REACT_APP_TOKEN = \"$REACT_APP_TOKEN\"" > .env
    - echo "REACT_APP_IP = \"$REACT_APP_IP_TEST\"" >> .env
    - npm install --legacy-peer-deps
    - CI=false; npm run build    
  artifacts:
    expire_in: 3 days
    paths:
      - build
      - .env

BuildProd:
  stage: build
  tags:
    - "ff_linux"
  image: node:16.15.0
  only:
    - main
  script:
    - echo "REACT_APP_TOKEN = \"$REACT_APP_TOKEN\"" > .env
    - echo "REACT_APP_IP = \"$REACT_APP_IP\"" >> .env
    - npm install --legacy-peer-deps
    - CI=false; npm run build    
  artifacts:
    expire_in: 3 days
    paths:
      - build
      - .env

DeployDev:
  stage: deploy
  tags:
    - "ff_linux"
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan $SERVER_ADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  only:
      - development
  needs:
    - BuildDev
  script:
    - ssh $SERVER_USERNAME@$SERVER_ADDRESS "rm -rf /usr/share/nginx/html/test"
    - scp -r build $SERVER_USERNAME@$SERVER_ADDRESS:/usr/share/nginx/html/test
    - echo "Application successfully deployed in test."

DeployProd:
  stage: deploy
  tags:
    - "ff_linux"
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - ssh-keyscan $SERVER_ADDRESS >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  only:
      - main
  needs:
    - BuildProd
  script:
    - ssh $SERVER_USERNAME@$SERVER_ADDRESS "rm -rf /usr/share/nginx/html/findfriend"
    - scp -r build $SERVER_USERNAME@$SERVER_ADDRESS:/usr/share/nginx/html/findfriend
    - echo "Application successfully deployed."
